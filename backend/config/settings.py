"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path

from corsheaders.defaults import default_headers
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-1y7x2==2mc6e3v%ly+of)nvqwj3**%&-+&!u3*z#v3%&4er92q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]  # for development purposes

REST_FRAMEWORK = {
    # 'DEFAULT_RENDERER_CLASSES': (
    #     'rest_framework.renderers.JSONRenderer',
    #     'rest_framework.renderers.BrowsableAPIRenderer',  # This enables the browsable API
    # ),
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
}

AUTH_USER_MODEL = 'authentication.AuthUser'

# Application definition

INSTALLED_APPS = [
    # 'admin_soft.apps.AdminSoftDashboardConfig',
    'jazzmin',
    'django_ckeditor_5',
    # 'admin_honeypot',
    'config.apps.AdminHoneypotConfig',

    'django.contrib.admin',
    # 'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # third party apps
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'corsheaders',
    'drf_spectacular',
    # local apps
    'apps.authentication.apps.UsersConfig',
    'apps.authentication.apps.CustomAuthConfig',

    # 'apps.authentication',
    'apps.users',
    'apps.campaigns',
    'apps.investments',
    'apps.notifications',
    'apps.ai_services',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
    }
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Fundflow API',
    'DESCRIPTION': 'FundFlow: Crowdfunding Platform API Documentation',
    'VERSION': '1.0.2',  # Set your API version here
    'SERVE_INCLUDE_SCHEMA': False,
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files (Uploaded by users)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_CREDENTIALS = True  # Ensure this is set
CORS_ALLOW_ALL_ORIGINS = True  # For development; in production, restrict this to specific origins
CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173',  # Add your frontend's URL
    'https://5f54-31-148-166-245.ngrok-free.app',  # Ngrok URL
    "http://localhost:8000",
    # "http://127.0.0.1:8000",
    # 'http://127.0.0.1:5173/'
    # 'null',
]

# Allow all methods and headers (similar to FastAPI config)
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CORS_ALLOW_HEADERS = [
    'Access-Control-Allow-Origin'
    "default_headers"
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    'content-disposition', 'accept-encoding',
    'content-type', 'accept', 'origin', 'Authorization',
    'access-control-allow-methods'
]

CSRF_TRUSTED_ORIGINS = [
    'http://localhost:5173',
    "http://localhost:8000",
    'https://5f54-31-148-166-245.ngrok-free.app',
]

# CSRF_TRUSTED_ORIGINS = [
#     'https://5f54-31-148-166-245.ngrok-free.app ',
#     'http://localhost:3000',
#     'http://localhost:5173'
# ]

INSTALLED_APPS += ['dbbackup']
DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'  # default
DBBACKUP_STORAGE_OPTIONS = {'location': BASE_DIR / 'db_backups'}
DBBACKUP_CLEANUP_KEEP = 100  # number of backups to keep
DBBACKUP_CONNECTORS = {
    'default': {
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': '5432',
        'NAME': os.getenv('DB_NAME'),
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}

# for authentication

LOGIN_URL = '/admin/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

JAZZMIN_SETTINGS = {
    # "show_ui_builder": True,

    "site_title": "FundflowAdmin",
    "site_header": "FundflowAdmin",
    "site_brand": "Fundflow Admin",
    "site_icon": "fundflow-icon.png",
    "site_logo": "fundflow-icon.png",
    "site_logo_dark": "fundflow-icon.png",
    "welcome_sign": "Welcome to Fundflow Admin",

    "user_avatar": "profile_image",
    # "use_google_fonts_cdn": True,
    # "language_chooser": True,

    # "changeform_format": "collapsible",

    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "new_window": False},
        {"name": "View Platform", "url": "http://localhost:5173/", "icon": "open_in_new_.png", "new_window": True},
    ],

    # "usermenu_links": [
    #     {"name": "View Platform", "url": "http://localhost:5173/", "new_window": True},
    # ],
    # dark mode switcher

    "change_theme": "theme",
    "default_dark_mode": True,

    "order_with_respect_to": [
        "campaigns",
        "campaigns.campaign",
        "campaigns.campaignmedia",
        "campaigns.campaignlink",
        "campaigns.campaignteammember",
        "campaigns.campaignnews",
        "campaigns.campaignfaq",
        "campaigns.campaignlike",
        "campaigns.campaignshare",
        "campaigns.campaignvisit",
        "campaigns.campaigntag",
        "campaigns.campaigncategory",
        "campaigns.collaborationrequest",
        "campaigns.withdrawalrequest",

        "ai_services",
        "ai_services.moderationlog",

        "investments",
        "investments.payment",
        "investments.transaction",
        "investments.investment",

        "notifications",
        "notifications.notification",

        "users",
        "users.userprofile",
        "users.usersavedcampaign",

        "authentication",
        "auth.user",

        "auth",
        "auth.group",

        "admin_honeypot",
        "admin_honeypot.loginattempt",

        "token_blacklist",
        "token_blacklist.blacklistedtoken",
        "token_blacklist.outstandingtoken",
    ],

    # "hide_apps": [
    #     "token_blacklist",
    # ],

    "navigation_expanded": False,

    "icons": {
        # Campaigns app and models
        "campaigns": "fas fa-bullhorn",
        "campaigns.campaign": "fas fa-flag",
        "campaigns.campaignmedia": "fas fa-images",
        "campaigns.campaignlink": "fas fa-link",
        "campaigns.campaignteammember": "fas fa-users",
        "campaigns.campaignnews": "fas fa-newspaper",
        "campaigns.campaignfaq": "fas fa-question-circle",
        "campaigns.campaignlike": "fas fa-heart",
        "campaigns.campaignshare": "fas fa-share-alt",
        "campaigns.campaignvisit": "fas fa-eye",
        "campaigns.campaigntag": "fas fa-tag",
        "campaigns.campaigncategory": "fas fa-list",
        "campaigns.collaborationrequest": "fas fa-handshake",
        "campaigns.withdrawalrequest": "fas fa-money-check-alt",

        # AI Services
        "ai_services": "fas fa-robot",
        "ai_services.moderationlog": "fas fa-clipboard-check",

        # Investments app and models
        "investments": "fas fa-chart-line",
        "investments.payment": "fas fa-credit-card",
        "investments.transaction": "fas fa-exchange-alt",
        "investments.investment": "fas fa-piggy-bank",

        # Notifications
        "notifications": "fas fa-bell",
        "notifications.notification": "fas fa-envelope",

        # Authentication and Permissions
        "authentication": "fas fa-lock",
        "authentication.authuser": "fas fa-user",
        "auth": "fas fa-shield-alt",
        "auth.group": "fas fa-users-cog",

        # Users app
        "users": "fas fa-user-circle",
        "users.userprofile": "fas fa-id-badge",
        "users.usersavedcampaign": "fas fa-save",

        # HoneyPot
        "admin_honeypot": "fas fa-spider",
        "admin_honeypot.loginattempt": "fas fa-user-secret",

        # Token Blacklist
        "token_blacklist": "fas fa-ban",
        "token_blacklist.blacklistedtoken": "fas fa-user-slash",
        "token_blacklist.outstandingtoken": "fas fa-exclamation-triangle",
    },

    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-folder",
    "default_icon_children": "fas fa-file",
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-teal",
    "accent": "accent-teal",
    "navbar": "navbar-teal navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": False,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-light-teal",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "minty",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-info",
        "warning": "btn-warning",
        "danger": "btn-danger",
        "success": "btn-success"
    }
}

# JAZZMIN_SETTINGS = ["show_ui_builder"] = True


# CKEDITOR5

customColorPalette = [
    {
        'color': 'hsl(4, 90%, 58%)',
        'label': 'Red'
    },
    {
        'color': 'hsl(340, 82%, 52%)',
        'label': 'Pink'
    },
    {
        'color': 'hsl(291, 64%, 42%)',
        'label': 'Purple'
    },
    {
        'color': 'hsl(262, 52%, 47%)',
        'label': 'Deep Purple'
    },
    {
        'color': 'hsl(231, 48%, 48%)',
        'label': 'Indigo'
    },
    {
        'color': 'hsl(207, 90%, 54%)',
        'label': 'Blue'
    },
]

CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': ['heading', '|', 'bold', 'italic', 'link',
                    'bulletedList', 'numberedList', 'blockQuote', 'imageUpload', ],

    },
    'extends': {
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'blockQuote',
        ],
        'toolbar': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
                    'code', 'subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',
                    'bulletedList', 'numberedList', 'todoList', '|', 'blockQuote', 'imageUpload', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'removeFormat',
                    'insertTable', ],
        'image': {
            'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',
                        'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side', '|'],
            'styles': [
                'full',
                'side',
                'alignLeft',
                'alignRight',
                'alignCenter',
            ]

        },
        'table': {
            'contentToolbar': ['tableColumn', 'tableRow', 'mergeTableCells',
                               'tableProperties', 'tableCellProperties'],
            'tableProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading': {
            'options': [
                {'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'}
            ]
        }
    },
    'list': {
        'properties': {
            'styles': 'true',
            'startIndex': 'true',
            'reversed': 'true',
        }
    }
}

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_PORT = 587  # TLS, 465 for SSL
EMAIL_USE_TLS = True
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')
